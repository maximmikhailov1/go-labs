services:
  backend:
    build: ./backend
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "3000"

  frontend:
    build: 
      context: ./frontend/labs-front
      dockerfile: Dockerfile
    ports:
      - 3223:8080

    environment:
      NEXT_PUBLIC_API_URL: "http://backend:3000" 
    depends_on:
      - backend

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"] # Используем переменные!
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data: